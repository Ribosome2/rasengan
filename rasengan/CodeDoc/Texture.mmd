Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# Texture

## 添加Texture的步骤

###  vkCreateImage创建一个<br/>ImageObject\(VkImage\)

#### VkImage 和 VkDeviceMemory 进行绑定

##### VkImage 的 format<br/>UNORM vs SRGB?

###### 这里的格式选择和SwapChain的Image格式有关系：<br/>如果swapchain选了UNORM 而创建普通贴图的时候选了<br/>显示的时候就会预想不到

###### 解释：
- LINK
<pre>https://stackoverflow.com/questions/66401081/vulkan-swapchain-format-unorm-vs-srgb</pre>

#### 去取图片信息填充<br/>到ImageObject

##### 先读取图片像素，拿到内存指针

##### 创建stagingBuffer

##### 把图片内存进行复制，<br/>并且把内存映射到stagingBuffer 内存

##### 在填充之前先把VkImage的layout transition为<br/>VK\_IMAGE\_LAYOUT\_TRANSFER\_DST\_OPTIMAL

###### 这一步不做行不行？

##### vkCmdCopyBufferToImage <br/>把stagingBuffer的数据复制到VkImage

##### 再把VkImage进行一次transition，layout转为<br/>VK\_IMAGE\_LAYOUT\_SHADER\_READ\_ONLY\_OPTIMAL<br/>这样就能在Shader里面高效的访问了

###### 这一步不做行不行？

### 创建ImageSampler

### 增加一个CombinedImageSampler<br/>Descriptor 从Texture取样

## Layout

### 不同的使用场景<br/>的最优布局不一样
> collapsed=`true`


#### VK\_IMAGE\_LAYOUT\_PRESENT\_SRC\_KHR<br/>Optimal for presentation

#### VK\_IMAGE\_LAYOUT\_COLOR\_ATTACHMENT\_OPTIMAL:<br/> Optimal as attachment for writing colors from the fragment shader

#### VK\_IMAGE\_LAYOUT\_TRANSFER\_SRC\_OPTIMAL: <br/>Optimal as source in a transfer operation,<br/> like vkCmdCopyImageToBuffer
> align=`left`


#### VK\_IMAGE\_LAYOUT\_TRANSFER\_DST\_OPTIMAL: <br/>Optimal as destination in a transfer operation, <br/>like vkCmdCopyBufferToImage

#### VK\_IMAGE\_LAYOUT\_SHADER\_READ\_ONLY\_OPTIMAL: <br/>Optimal for sampling from a shader

### 转换Image的layout方式

#### pipeline barrier\.

##### 主要用于资源的访问同步<br/>比如保用在读Image之前已经写入

##### 也可以用来转换Texture的Layout

##### transfer queue family ownership when <br/>VK\_SHARING\_MODE\_EXCLUSIVE is used

### VkImageCreateInfo 

#### tiling 指定Image的布局方式

##### VK\_IMAGE\_TILING\_LINEAR: <br/>Texels are laid out in row\-major order like our pixels array<br/>这种方式能直接访问Image内存中的texel

##### VK\_IMAGE\_TILING\_OPTIMAL: <br/>Texels are laid out in an implementation defined order for optimal access

## MipMap
> leftSide=`true`


## WrapMode
> leftSide=`true`


## anisotropy
> leftSide=`true`


### 如果要用就得在 创建LogicalDevie的时候<br/>指定 VkPhysicalDeviceFeatures 的 samplerAnisotropy =true 
